// <auto-generated />
using System;
using API_UBAM.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_UBAM.Migrations
{
    [DbContext(typeof(UbamDbContext))]
    [Migration("20241026184110_Create_Database")]
    partial class Create_Database
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API_UBAM.Models.Alumno", b =>
                {
                    b.Property<Guid>("Id_Alumno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Grupo_Alumno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Id_Carrera")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_Persona")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id_Alumno");

                    b.HasIndex("Id_Carrera");

                    b.HasIndex("Id_Persona")
                        .IsUnique();

                    b.ToTable("Alumnos");
                });

            modelBuilder.Entity("API_UBAM.Models.Carrera", b =>
                {
                    b.Property<Guid>("Id_Carrera")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Nombre_Carrera")
                        .HasColumnType("int");

                    b.HasKey("Id_Carrera");

                    b.ToTable("Carreras");
                });

            modelBuilder.Entity("API_UBAM.Models.Docente", b =>
                {
                    b.Property<Guid>("Id_Docente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_Persona")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id_Docente");

                    b.HasIndex("Id_Persona")
                        .IsUnique();

                    b.ToTable("Docentes");
                });

            modelBuilder.Entity("API_UBAM.Models.Persona", b =>
                {
                    b.Property<Guid>("Id_Persona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apellido_Materno_Persona")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Apellido_Paterno_Persona")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Curp_Persona")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("Fecha_Nacimiento_Persona")
                        .HasColumnType("date");

                    b.Property<string>("Nombre_Persona")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sexo_Persona")
                        .HasColumnType("int");

                    b.HasKey("Id_Persona");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("API_UBAM.Models.Rol", b =>
                {
                    b.Property<Guid>("Id_Rol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Nombre_Rol")
                        .HasColumnType("int");

                    b.HasKey("Id_Rol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("API_UBAM.Models.Usuario", b =>
                {
                    b.Property<Guid>("Id_Usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Clave_Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estatus_Usuario")
                        .HasColumnType("int");

                    b.Property<Guid>("Id_Persona")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre_Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Usuario");

                    b.HasIndex("Id_Persona")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("API_UBAM.Models.Usuario_Rol", b =>
                {
                    b.Property<Guid>("Id_Usuario")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<Guid>("Id_Rol")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.HasKey("Id_Usuario", "Id_Rol");

                    b.HasIndex("Id_Rol");

                    b.ToTable("Usuario_Roles");
                });

            modelBuilder.Entity("API_UBAM.Models.Alumno", b =>
                {
                    b.HasOne("API_UBAM.Models.Carrera", "Carrera")
                        .WithMany("Alumnos")
                        .HasForeignKey("Id_Carrera")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_UBAM.Models.Persona", "Persona")
                        .WithOne("Alumno")
                        .HasForeignKey("API_UBAM.Models.Alumno", "Id_Persona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrera");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("API_UBAM.Models.Docente", b =>
                {
                    b.HasOne("API_UBAM.Models.Persona", "Persona")
                        .WithOne("Docente")
                        .HasForeignKey("API_UBAM.Models.Docente", "Id_Persona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("API_UBAM.Models.Usuario", b =>
                {
                    b.HasOne("API_UBAM.Models.Persona", "Persona")
                        .WithOne("Usuario")
                        .HasForeignKey("API_UBAM.Models.Usuario", "Id_Persona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("API_UBAM.Models.Usuario_Rol", b =>
                {
                    b.HasOne("API_UBAM.Models.Rol", "Rol")
                        .WithMany("Usuario_Roles")
                        .HasForeignKey("Id_Rol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_UBAM.Models.Usuario", "Usuario")
                        .WithMany("Usuario_Roles")
                        .HasForeignKey("Id_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("API_UBAM.Models.Carrera", b =>
                {
                    b.Navigation("Alumnos");
                });

            modelBuilder.Entity("API_UBAM.Models.Persona", b =>
                {
                    b.Navigation("Alumno")
                        .IsRequired();

                    b.Navigation("Docente")
                        .IsRequired();

                    b.Navigation("Usuario")
                        .IsRequired();
                });

            modelBuilder.Entity("API_UBAM.Models.Rol", b =>
                {
                    b.Navigation("Usuario_Roles");
                });

            modelBuilder.Entity("API_UBAM.Models.Usuario", b =>
                {
                    b.Navigation("Usuario_Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
